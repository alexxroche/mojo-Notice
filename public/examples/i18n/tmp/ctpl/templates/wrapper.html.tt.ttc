use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1322484005',
        'name' => 'wrapper.html.tt',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 25 "templates/wrapper.html.tt"
    if (!($stash->get('no_wrapper'))) {
    $output .=  "\n<?xml version=\"2.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\"; xml:lang=\"en\" lang=\"en\">\n<head>\n<title>";
#line 6 "templates/wrapper.html.tt"
    $output .=  $stash->get('title') || $stash->get(['template', 0, 'title', 0]) || 'Notice CRaAM';
    $output .=  "</title>\n<link rel=\"stylesheet\" href=\"/css/";
#line 7 "templates/wrapper.html.tt"
    $output .=  $stash->get(['template', 0, 'css', 0]) || 'main.css';
    $output .=  "\" />\n<meta name=\"description\" content=\"Notice CRaAM\" />\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\n<meta http-equiv=\"Content-Style-Type\" content=\"text/css\" />\n<meta name=\"keywords\" content=\"extended, customer, resource, management, system, for, internet, companies\" />\n<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"/css/asset.css\" />\n<script type=\"text/javascript\" src=\"/js/jquery.js\"></script>\n<!--script src=\"/js/asset.js\" type=\"text/javascript\"></script-->\n</head>\n<body>\n";
#line 17 "templates/wrapper.html.tt"
    $output .=  $stash->get('message');
    $output .=  "\n ";
#line 18 "templates/wrapper.html.tt"
    $output .=  $stash->get('content');
    $output .=  "\n\n<div class=\"footer\">Copyright (c) 2007-2011 Alexx Roche</div>\n</div><!-- end outer -->\n\n</body>\n</html>\n";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
